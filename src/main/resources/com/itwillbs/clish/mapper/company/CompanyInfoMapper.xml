<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.clish.company.mapper.CompanyInfoMapper">

	<!-- 로그인한 기업회원 정보 조회 -->
	<select id="selectUserInfo" resultType="com.itwillbs.clish.user.dto.UserDTO">
		SELECT *
		FROM USER
		WHERE user_id = #{userId}
	</select>
	
	<!-- 기업전화번호 중복 확인 -->
	<select id="selectPhoneNumberDuplicate" resultType="boolean">
	    SELECT COUNT(*) > 0
	    FROM USER 
	    WHERE
			user_phone_number = #{userPhoneNumber}
		AND
			user_idx != #{userIdx}
	</select>
	
	<!-- 기업회원 정보 수정 처리 -->
	<update id="updateUserInfo">
    UPDATE USER
	    <trim prefix="SET" suffixOverrides=",">
	        <if test="userPassword != null and userPassword != ''">
	            user_password = #{userPassword},
	        </if>
	        <if test="newEmail != null and newEmail != ''">
	            user_email = #{newEmail},
	        </if>
	        user_name = #{userName},
	        user_rep_name = #{userRepName},
	        user_birth = #{userBirth},
	        user_phone_number = #{userPhoneNumber},
	        user_phone_number_sub = #{userPhoneNumberSub},
	        user_postcode = #{userPostcode},
	        user_address1 = #{userAddress1},
	        user_address2 = #{userAddress2}
	    </trim>
	    WHERE user_id = #{userId}
	</update>
	
	<!--  userIdx로 기업 정보 조회 -->
	<select id="selectCompanyInfo" resultType="com.itwillbs.clish.user.dto.CompanyDTO">
    	SELECT *
		FROM COMPANY
		WHERE
			user_idx = #{userIdx}
	</select>
	
	<!-- 기업 사업자등록증 등록 -->
	<insert id="insertCompanyInfo">
	    INSERT INTO COMPANY (
	        user_idx, biz_reg_no, biz_file_name, biz_file_path, upload_date
	    ) VALUES (
	        #{userIdx}, #{bizRegNo}, #{bizFileName}, #{bizFilePath}, NOW()
	    )
	</insert>
	
	<!-- 기업회원 사업자등록증 정보 수정 처리 -->
	<update id="updateCompanyInfo">
		UPDATE COMPANY
		SET 
			biz_reg_no = #{bizRegNo},
			biz_file_name = #{bizFileName},
			biz_file_path = #{bizFilePath},
			upload_date = NOW()
		  WHERE
			user_idx = #{userIdx}
	</update>
	
	<!-- 전체 문의목록 조회용 resultMap -->
	<resultMap id="InquiryJoinUserResultMap" type="com.itwillbs.clish.admin.dto.InquiryJoinUserDTO">
	    <!-- InquiryJoinUserDTO의 userName 필드 -->
	    <result property="userName" column="user_name"/>
	    
	    <!-- InquiryJoinUserDTO 안에 있는 inquiry 객체의 필드들 직접 명시 -->
	    <result property="inquiry.inqueryIdx" column="inquery_idx"/>
	    <result property="inquiry.userIdx" column="user_idx"/>
	    <result property="inquiry.inqueryTitle" column="inquery_title"/>
	    <result property="inquiry.inqueryDetail" column="inquery_detail"/>
	    <result property="inquiry.inqueryAnswer" column="inquery_answer"/>
	    <result property="inquiry.inqueryDatetime" column="inquery_datetime"/>
	    <result property="inquiry.inqueryAnswerDatetime" column="inquery_answer_datetime"/>
	    <result property="inquiry.inqueryStatus" column="inquery_status"/>
	    <result property="inquiry.inqueryType" column="inquery_type"/>
	    <result property="inquiry.classIdx" column="class_idx"/>
	    <result property="inquiry.inqueryModifyDatetime" column="inquery_modify_datetime"/>
	</resultMap>
	
	<!-- 기업 - 나의 문의 총 개수 조회 -->
	<select id="selectInquiryCountByUserIdx" resultType="int">
	    SELECT COUNT(*) 
	    FROM INQUERY 
	    WHERE user_idx = #{userIdx}
	</select>
		
	<!-- 기업 - 나의 문의 리스트 조회 (페이징) -->
	<select id="selectInquiriesByUserIdx" resultMap="InquiryJoinUserResultMap">
		 SELECT 
	        i.inquery_idx,
	        i.user_idx,
	        i.inquery_title,
	        i.inquery_detail,
	        i.inquery_answer,
	        i.inquery_datetime,
	        i.inquery_answer_datetime,
	        i.inquery_status,
	        i.inquery_type,
	        i.class_idx,
	        i.inquery_modify_datetime,
	        u.user_name
	    FROM INQUERY i
	    JOIN USER u ON i.user_idx = u.user_idx
	    WHERE i.user_idx = #{userIdx}
	    ORDER BY i.inquery_datetime DESC
	    LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 문의 등록버튼 로직 -->
	<insert id="insertInquery">
		INSERT INTO INQUERY (
	        inquery_idx,
	        user_idx,
	        inquery_type,
	        inquery_title,
	        inquery_detail,
	        inquery_status,
	        inquery_datetime
	    ) VALUES (
	        #{inqueryIdx},
	        #{userIdx},
	        1,
	        #{inqueryTitle},
	        #{inqueryDetail},
	        1,
	        NOW()
	    )
	</insert>
	
	<!-- user_id로 실제 user_idx 조회 - 문의 등록버튼 -->
	<select id="selectUserIdxByUserId">
		SELECT user_idx FROM USER WHERE user_id = #{userId}
	</select>
	
	<!-- inquery_idx를 기반으로 해당 문의글 1건 조회 - 문의 수정 -->
	<select id="selectInqueryByIdx" resultType="com.itwillbs.clish.myPage.dto.InqueryDTO">
	    SELECT * 
	    FROM INQUERY
	    WHERE inquery_idx = #{inqueryIdx}
	</select>
	
	<!-- 문의 수정버튼 로직 -->
	<update id="updateInquery">
		UPDATE INQUERY
	    SET
	        inquery_title = #{inqueryTitle},
	        inquery_detail = #{inqueryDetail}
	    WHERE
	        inquery_idx = #{inqueryIdx}
	</update>
	
	<!-- 문의 삭제버튼 로직 -->
	<delete id="deleteInquery">
		DELETE
		FROM INQUERY
    	WHERE
			inquery_idx = #{inqueryIdx}
	</delete>
	
	<!-- 알림 개수 조회 -->
	<select id="selectCountNotification" resultType="int">
		SELECT COUNT(*)
		FROM NOTIFICATION
		WHERE
			user_idx = #{userIdx}
	</select>

	<!-- 알림 목록 조회 (페이징 포함) -->
	<select id="selectAllNotification" resultType="com.itwillbs.clish.admin.dto.NotificationDTO">
		SELECT *
		FROM NOTIFICATION
		WHERE
			user_idx = #{user.userIdx}
		ORDER BY
			user_notice_created_at DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 알림 읽음 처리  -->
	<update id="updateNotificationReadStatus">
	    UPDATE NOTIFICATION
	    SET user_notice_read_status = 1
	    WHERE notice_idx = #{noticeIdx}
	</update>
	
	<!-- 모두 읽음 처리 -->
	<update id="updateAllNotificationReadStatus">
		UPDATE NOTIFICATION
		SET user_notice_read_status = 1
		WHERE user_idx = #{userIdx}
		AND user_notice_read_status = 2
	</update>
	
	<!-- 기업 회원 탈퇴 -->
	<update id="updateWithdraw">
        UPDATE USER
        SET
			user_status = 3
        WHERE user_id = #{userId}
    </update>
</mapper>




